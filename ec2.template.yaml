AWSTemplateFormatVersion: "2010-09-09"

Description: "Creates EC2 instances"

Parameters:
  env:
    Description: Environment for the frontend like dev, stg or prod
    Type: String
    Default: "dev"
    AllowedValues:
      - prod
      - dev
      - stg

Mappings:
  Ec2InstanceConfigMap:
    dev:
      ibmEc2InstanceType: 't2.micro'
      ibmcomEc2InstanceType: 't2.micro'
      goanywhereEc2InstanceType: 't2.micro'
      amiId: 'ami-02396cdd13e9a1257'
      goanywhereAmiId: ami-02396cdd13e9a1257'
      keyname: 'dvix-app-key'
    stg:
      ibmEc2InstanceType: 't2.micro'
      ibmcomEc2InstanceType: 't2.micro'
      goanywhereEc2InstanceType: 't2.micro'
      amiId: 'ami-02396cdd13e9a1257'
      goanywhereAmiId: ami-02396cdd13e9a1257'
      keyname: 'dvix-app-key'
    prod:
      ibmEc2InstanceType: 't2.micro'
      ibmcomEc2InstanceType: 't2.micro'
      goanywhereEc2InstanceType: 't2.micro'
      amiId: 'ami-02396cdd13e9a1257'
      goanywhereAmiId: ami-02396cdd13e9a1257'
      keyname: 'dvix-app-key'

Conditions:
  isProd: !Equals [!Ref env, 'prod']
  isStaging: !Equals [!Ref env, 'stg']
  isStagingOrProd: !Or 
    - !Condition isProd
    - !Condition isStaging

Resources:

  # EC2 Instances #############################################

  IBMAppEc2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
      - ApplicationSecruityGroup
    Properties:
      InstanceType: !FindInMap [ Ec2InstanceConfigMap, !Ref env, ibmEc2InstanceType ]
      SecurityGroupIds:
        - !Sub '{{resolve:ssm:/${env}/dvix/application/sg/id}}'
      SubnetId: '{{resolve:ssm:/common-resources/subnet/private0}}'
      ImageId: !FindInMap [ Ec2InstanceConfigMap, !Ref env, amiId ]
      KeyName: !FindInMap [ Ec2InstanceConfigMap, !Ref env, keyname ]
      Tags:
        - Key: Name
          Value: !Sub '${env}-dvix-ibm-app-ec2instance'
        - Key: Environment
          Value: !Ref env

  IBMCOMAppEc2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
      - ApplicationSecruityGroup
    Properties:
      InstanceType: !FindInMap [ Ec2InstanceConfigMap, !Ref env, ibmcomEc2InstanceType ]
      SecurityGroupIds:
        - !Sub '{{resolve:ssm:/${env}/dvix/application/sg/id}}'
      SubnetId: '{{resolve:ssm:/common-resources/subnet/private0}}'
      ImageId: !FindInMap [ Ec2InstanceConfigMap, !Ref env, amiId ]
      KeyName: !FindInMap [ Ec2InstanceConfigMap, !Ref env, keyname ]
      Tags:
        - Key: Name
          Value: !Sub '${env}-dvix-ibmcom-app-ec2instance'
        - Key: Environment
          Value: !Ref env

  GoAnyWhereEc2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
      - ApplicationSecruityGroup
    Properties:
      InstanceType: !FindInMap [ Ec2InstanceConfigMap, !Ref env, goanywhereEc2InstanceType ]
      SecurityGroupIds:
        - !Sub '{{resolve:ssm:/${env}/dvix/goanywhere/sg/id}}'
      SubnetId: '{{resolve:ssm:/common-resources/subnet/private0}}'
      ImageId: !FindInMap [ Ec2InstanceConfigMap, !Ref env, goanywhereAmiId ]
      KeyName: !FindInMap [ Ec2InstanceConfigMap, !Ref env, keyname ]
      Tags:
        - Key: Name
          Value: !Sub '${env}-dvix-go-anywhere-private-ec2instance'
        - Key: Environment
          Value: !Ref env

  GoAnyWhereProxyEc2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !FindInMap [ Ec2InstanceConfigMap, !Ref env, goanywhereEc2InstanceType ]
      SecurityGroupIds:
        - !Sub '{{resolve:ssm:/${env}/dvix/goanywhere-proxy/sg/id}}'
      SubnetId: '{{resolve:ssm:/common-resources/subnet/public0}}'
      ImageId: !FindInMap [ Ec2InstanceConfigMap, !Ref env, goanywhereAmiId ]
      KeyName: !FindInMap [ Ec2InstanceConfigMap, !Ref env, keyname ]
      Tags:
        - Key: Name
          Value: !Sub '${env}-dvix-go-anywhere-proxy-ec2instance'
        - Key: Environment
          Value: !Ref env


  # Higher environment: Staging and Prod EC2 Instances ###################

  GoAnyWhereSecondaryEc2Instance:
    Condition: isStagingOrProd
    Type: AWS::EC2::Instance
    DependsOn:
      - ApplicationSecruityGroup
    Properties:
      InstanceType: !FindInMap [ Ec2InstanceConfigMap, !Ref env, goanywhereEc2InstanceType ]
      SecurityGroupIds:
        - !Sub '{{resolve:ssm:/${env}/dvix/goanywhere/sg/id}}'
      SubnetId: '{{resolve:ssm:/common-resources/subnet/private1}}'
      ImageId: !FindInMap [ Ec2InstanceConfigMap, !Ref env, goanywhereAmiId ]
      KeyName: !FindInMap [ Ec2InstanceConfigMap, !Ref env, keyname ]
      Tags:
        - Key: Name
          Value: !Sub '${env}-dvix-go-anywhere-private-secondary-ec2instance'
        - Key: Environment
          Value: !Ref env

  GoAnyWhereProxySecondaryEc2Instance:
    Condition: isStagingOrProd
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !FindInMap [ Ec2InstanceConfigMap, !Ref env, goanywhereEc2InstanceType ]
      SecurityGroupIds:
        - !Sub '{{resolve:ssm:/${env}/dvix/goanywhere-proxy/sg/id}}'
      SubnetId: '{{resolve:ssm:/common-resources/subnet/public1}}'
      ImageId: !FindInMap [ Ec2InstanceConfigMap, !Ref env, goanywhereAmiId ]
      KeyName: !FindInMap [ Ec2InstanceConfigMap, !Ref env, keyname ]
      Tags:
        - Key: Name
          Value: !Sub '${env}-dvix-go-anywhere-proxy-secondary-ec2instance'
        - Key: Environment
          Value: !Ref env



  











  